@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 class="display-4">Scratch Auto Grader</h1>
</div>
<h2 id="introduction">Introduction</h2>
<p>The Scratch Program Autograder is a software tool developed to automate the evaluation of Scratch projects submitted by students. This README document provides an overview of the program, its functionalities, and how to use it.
Features</p>
<ol>
<li>Library of Functions</li>
</ol>
<p>The Scratch Program Autograder provides a comprehensive library of functions that allow instructors to process and evaluate Scratch projects efficiently. These functions enable the verification of assignment submissions against predefined expectations.</p>
<ol>
<li>Parsing .sb3 Files</li>
</ol>
<p>Our autograder has the capability to parse Scratch projects saved in the .sb3 file format. This enables us to access the Abstract Syntax Tree (AST) within the project file, providing the foundation for detailed evaluation.</p>
<ol>
<li>Querying AST</li>
</ol>
<p>Instructors can search and analyze the AST using the following features:</p>
<pre><code><span class="hljs-keyword">Search</span> <span class="hljs-keyword">by</span> Kind: Find specific blocks <span class="hljs-keyword">by</span> their <span class="hljs-keyword">type</span> (<span class="hljs-keyword">e</span>.<span class="hljs-keyword">g</span>., <span class="hljs-string">"if...then"</span>).
<span class="hljs-keyword">Search</span> <span class="hljs-keyword">by</span> Kind and <span class="hljs-keyword">Input</span> Values: Locate blocks based <span class="hljs-keyword">on</span> both their <span class="hljs-keyword">type</span> and specific <span class="hljs-keyword">input</span> values (<span class="hljs-keyword">e</span>.<span class="hljs-keyword">g</span>., <span class="hljs-string">"Repeat 10 times"</span>).
</code></pre><ol>
<li>Accessing Subtrees</li>
</ol>
<p>The autograder allows easy access to subtree information under a queried block, providing:</p>
<pre><code><span class="hljs-keyword">Block</span> <span class="hljs-keyword">Type</span>: Identifies the <span class="hljs-keyword">type</span> <span class="hljs-keyword">of</span> the <span class="hljs-keyword">block</span> (e.g., <span class="hljs-string">"Move To X Y"</span> <span class="hljs-keyword">or</span> <span class="hljs-string">"Next Costume"</span>).
Children Blocks: Retrieves the subtree <span class="hljs-keyword">of</span> children blocks attached below the selected <span class="hljs-keyword">block</span>.
Parent <span class="hljs-keyword">Block</span> Reference: Establishes a link <span class="hljs-keyword">to</span> the parent <span class="hljs-keyword">block</span> <span class="hljs-keyword">to</span> which the current <span class="hljs-keyword">block</span> <span class="hljs-keyword">is</span> attached.
Contained Blocks: <span class="hljs-keyword">For</span> control (C) blocks, it provides <span class="hljs-keyword">access</span> <span class="hljs-keyword">to</span> the subtree <span class="hljs-keyword">of</span> contained blocks.
Input Field Values: Retrieves values <span class="hljs-keyword">of</span> input fields <span class="hljs-keyword">for</span> blocks (e.g., number <span class="hljs-keyword">of</span> repeats <span class="hljs-keyword">in</span> a <span class="hljs-string">"Repeat N Times"</span> <span class="hljs-keyword">block</span> <span class="hljs-keyword">or</span> operands <span class="hljs-keyword">in</span> an <span class="hljs-string">"A + B"</span> <span class="hljs-keyword">block</span>).
</code></pre><ol>
<li>Music Block Evaluation</li>
</ol>
<p>Our autograder can determine if a sequence of music blocks exists and evaluates the correctness of notes in terms of pitch and duration. This evaluation accommodates complex scenarios, such as chords and inline math expressions.</p>
<ol>
<li>Sprite Position Tracking</li>
</ol>
<p>The autograder can track the position of sprites at specific points along the AST. For example, it can calculate the absolute position of a sprite after a series of actions (e.g., &quot;Change Y by 10&quot; followed by &quot;Change X by 10&quot;).</p>
<ol>
<li>Providing Feedback</li>
</ol>
<p>Instructors can provide feedback to students using the following methods:</p>
<pre><code>Written Feedback: Send <span class="hljs-keyword">detailed</span> written feedback <span class="hljs-built_in">to</span> students through <span class="hljs-keyword">the</span> <span class="hljs-keyword">system</span> out <span class="hljs-keyword">and</span>/<span class="hljs-keyword">or</span> <span class="hljs-keyword">system</span> error streams.
Scoring: Indicate <span class="hljs-keyword">the</span> score <span class="hljs-keyword">using</span> <span class="hljs-keyword">the</span> program exit code (<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> no points, <span class="hljs-number">1</span> <span class="hljs-keyword">for</span> full points).
Partial Points: Submit partial points via <span class="hljs-keyword">a</span> GET request <span class="hljs-built_in">to</span> <span class="hljs-keyword">a</span> specified <span class="hljs-built_in">URL</span>. Use <span class="hljs-keyword">the</span> environment <span class="hljs-built_in">variable</span> CODIO_PARTIAL_POINTS_URL <span class="hljs-keyword">with</span> <span class="hljs-keyword">a</span> query <span class="hljs-keyword">string</span> <span class="hljs-keyword">of</span> <span class="hljs-string">"points=[value]"</span> <span class="hljs-built_in">to</span> communicate awarded points.
</code></pre><h2 id="getting-started">Getting Started</h2>
<p>To get started with the Scratch Program Autograder, follow these steps:</p>
<pre><code>Installation: Clone this repository to your local machine and <span class="hljs-keyword">install</span> the necessary dependencies (provide installation instructions <span class="hljs-keyword">if</span> needed).

<span class="hljs-keyword">Usage</span>: <span class="hljs-keyword">Describe</span> how <span class="hljs-keyword">to</span> <span class="hljs-keyword">use</span> the autograder <span class="hljs-keyword">in</span> your specific development environment. <span class="hljs-keyword">Include</span> code examples <span class="hljs-keyword">and</span> <span class="hljs-keyword">usage</span> scenarios.

Configuration: <span class="hljs-keyword">Explain</span> <span class="hljs-keyword">any</span> configuration <span class="hljs-keyword">settings</span>, environment <span class="hljs-keyword">variables</span>, <span class="hljs-keyword">or</span> <span class="hljs-keyword">input</span> <span class="hljs-keyword">file</span> formats <span class="hljs-keyword">required</span> <span class="hljs-keyword">for</span> the autograder <span class="hljs-keyword">to</span> <span class="hljs-keyword">work</span> correctly.

Testing: Provide guidance <span class="hljs-keyword">on</span> how <span class="hljs-keyword">to</span> <span class="hljs-keyword">test</span> the autograder <span class="hljs-keyword">with</span> <span class="hljs-keyword">sample</span> Scratch projects <span class="hljs-keyword">and</span> expected outcomes.

Feedback Reporting: Specify how <span class="hljs-keyword">errors</span> <span class="hljs-keyword">or</span> issues <span class="hljs-keyword">with</span> the autograder should be reported <span class="hljs-keyword">and</span> <span class="hljs-keyword">include</span> contact information.
</code></pre><h2 id="dependencies">Dependencies</h2>
<pre><code>List any external libraries, packages, <span class="hljs-keyword">or</span> software dependencies <span class="hljs-keyword">that</span> are required <span class="hljs-keyword">to</span> <span class="hljs-built_in">run</span> <span class="hljs-keyword">the</span> Scratch Program Autograder.
</code></pre><p>Contributors</p>
<h2 id="license">License</h2>
<pre><code>Specify the license under which <span class="hljs-keyword">this</span> software <span class="hljs-keyword">is</span> distributed. Acknowledgments If your autograder <span class="hljs-keyword">is</span> built upon existing work <span class="hljs-keyword">or</span> libraries, acknowledge <span class="hljs-keyword">and</span> provide credits <span class="hljs-keyword">to</span> the original authors <span class="hljs-keyword">or</span> projects. List the contributors <span class="hljs-keyword">to</span> <span class="hljs-keyword">this</span> project <span class="hljs-keyword">and</span> their roles.
</code></pre>